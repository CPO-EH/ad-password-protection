<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{5F3D1518-5EDC-4552-8A65-19C20037EF3E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Lithnet.ActiveDirectory.PasswordProtection.PowerShell</RootNamespace>
    <AssemblyName>LithnetPasswordProtection</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <AllowedReferenceRelatedFileExtensions>.nothing</AllowedReferenceRelatedFileExtensions>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>d:\build\lpp\ps\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>d:\build\lpp\ps\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationIcon>password-protection.ico</ApplicationIcon>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'MicrosoftSignedRelease|x64' ">
    <OutputPath>d:\build\lpp\ps\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'EVSignedRelease|x64'">
    <OutputPath>d:\build\lpp\ps\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <UsingTask TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
            File.WriteAllText(
                OutputFilename,
                Regex.Replace(File.ReadAllText(InputFilename), MatchExpression, ReplacementText)
                );
          ]]></Code>
    </Task>
  </UsingTask>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Core" />
    <Reference Include="System.DirectoryServices" />
    <Reference Include="System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\System.Management.Automation.6.0.4\ref\netstandard2.0\System.Management.Automation.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.ServiceModel" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="GetStorePath.cs" />
    <Compile Include="SyncHashesFromHibp.cs" />
    <Compile Include="RemoveCompromisedPassword.cs" />
    <Compile Include="RemoveBannedWord.cs" />
    <Compile Include="ImportPSCmdlet.cs" />
    <Compile Include="TestIsBannedWord.cs" />
    <Compile Include="TestIsADUserPasswordCompromised.cs" />
    <Compile Include="GetPasswordFilterResult.cs" />
    <Compile Include="TestIsCompromisedPassword.cs" />
    <Compile Include="AddBannedWord.cs" />
    <Compile Include="ImportBannedWords.cs" />
    <Compile Include="ImportCompromisedPasswords.cs" />
    <Compile Include="ImportBannedWordHashes.cs" />
    <Compile Include="ImportCompromisedPasswordHashes.cs" />
    <Compile Include="Global.cs" />
    <Compile Include="OpenStore.cs" />
    <Compile Include="AddCompromisedPassword.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="StoreNotOpenException.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\PasswordProtection\Lithnet.ActiveDirectory.PasswordProtection.csproj">
      <Project>{61df881d-34fe-462b-aaa8-a56cd4dff287}</Project>
      <Name>Lithnet.ActiveDirectory.PasswordProtection</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="LithnetPasswordProtection.psd1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="DSInternals.Replication">
      <Version>4.8.0</Version>
    </PackageReference>
    <PackageReference Include="PeterO.Cbor">
      <Version>4.5.2</Version>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="password-protection.ico" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEventDependsOn>
            $(PostBuildEventDependsOn);
            PostBuildMacros;
        </PostBuildEventDependsOn>
    <PostBuildEvent>
            if $(ConfigurationName) == EVSignedRelease (%25BuildToolsPath%25\sign-ev-and-save-symbols.bat $(TargetPath) $(TargetDir) $(ProjectName)) else (%25BuildToolsPath%25\sign-and-save-symbols.bat $(TargetPath) $(TargetDir) $(ProjectName))
        </PostBuildEvent>
  </PropertyGroup>
  <Target Name="PostBuildMacros">
    <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
      <Output TaskParameter="Assemblies" ItemName="Targets" />
    </GetAssemblyIdentity>
    <ItemGroup>
      <VersionNumber Include="@(Targets->'%(Version)')" />
    </ItemGroup>
  </Target>
  <Target Name="AfterBuild">
    <ReplaceFileText InputFilename="$(TargetDir)LithnetPasswordProtection.psd1" OutputFilename="$(TargetDir)LithnetPasswordProtection.psd1" MatchExpression="\$version\$" ReplacementText="@(VersionNumber)" />
  </Target>
</Project>